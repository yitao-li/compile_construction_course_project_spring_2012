State 14 conflicts: 1 reduce/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: /* empty */

    2 Program: T_PROGRAM T_ID $@1 ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.'

    3 TypeDefinitions: T_TYPE TypeDefinition ';' _OptTypeDefinitions

    4 OptTypeDefinitions: /* empty */
    5                   | TypeDefinitions

    6 _OptTypeDefinitions: /* empty */
    7                    | TypeDefinition ';' _OptTypeDefinitions

    8 $@2: /* empty */

    9 $@3: /* empty */

   10 TypeDefinition: T_ID $@2 '=' Type $@3

   11 VariableDeclarations: T_VAR VariableDeclaration ';' _OptVariableDeclarations

   12 $@4: /* empty */

   13 VariableDeclaration: IdentifierList ':' Type $@4

   14 OptVariableDeclarations: /* empty */
   15                        | VariableDeclarations

   16 _OptVariableDeclarations: /* empty */
   17                         | VariableDeclaration ';' _OptVariableDeclarations

   18 OptSubprogramDeclarations: /* empty */
   19                          | SubprogramDeclarations

   20 SubprogramDeclarations: /* empty */
   21                       | SubprogramDeclaration ';' SubprogramDeclarations

   22 SubprogramDeclaration: ProcedureDeclaration
   23                      | FunctionDeclaration

   24 $@5: /* empty */

   25 $@6: /* empty */

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' FormalParameterList $@6 ')' ';' DeclarationBody

   27 $@7: /* empty */

   28 $@8: /* empty */

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 ')' ':' ResultType ';' DeclarationBody

   30 DeclarationBody: Block
   31                | T_FORWARD

   32 $@9: /* empty */

   33 FormalParameterList: $@9

   34 $@10: /* empty */

   35 $@11: /* empty */

   36 FormalParameterList: $@10 IdentifierList ':' Type $@11 OptIdentifiers

   37 OptIdentifiers: /* empty */

   38 $@12: /* empty */

   39 OptIdentifiers: ';' IdentifierList ':' Type $@12 OptIdentifiers

   40 Block: CompoundStatement
   41      | VariableDeclarations CompoundStatement

   42 CompoundStatement: T_BEGIN StatementSequence T_END

   43 StatementSequence: Statement Statements

   44 Statement: SimpleStatement
   45          | StructuredStatement

   46 SimpleStatement: /* empty */
   47                | AssignmentStatement
   48                | ProcedureStatement

   49 AssignmentStatement: Variable T_ASSIGNMENT Expression

   50 ProcedureStatement: T_ID '(' ActualParameterList ')'

   51 StructuredStatement: CompoundStatement
   52                    | T_IF Expression T_THEN Statement CloseIf
   53                    | T_WHILE Expression T_DO Statement
   54                    | T_FOR T_ID T_ASSIGNMENT Expression T_TO Expression T_DO Statement

   55 CloseIf: /* empty */
   56        | T_ELSE Statement

   57 Statements: /* empty */
   58           | ';' Statement Statements

   59 $@13: /* empty */

   60 Type: T_ID $@13

   61 $@14: /* empty */

   62 $@15: /* empty */

   63 Type: T_ARRAY '[' Constant T_RANGE Constant ']' T_OF $@14 Type $@15

   64 $@16: /* empty */

   65 $@17: /* empty */

   66 Type: T_RECORD $@16 FieldList T_END $@17

   67 ResultType: T_ID

   68 FieldList: /* empty */

   69 $@18: /* empty */

   70 FieldList: IdentifierList ':' Type $@18 OptIdentifiers

   71 Constant: T_INT
   72         | Sign T_INT

   73 Expression: SimpleExpression
   74           | SimpleExpression RelationalOp SimpleExpression

   75 RelationalOp: T_RELOP
   76             | '='

   77 SimpleExpression: Term Summand
   78                 | Sign Term Summand

   79 AddOp: T_ADDOP
   80      | T_OR

   81 Term: Factor Multiplicand

   82 Summand: /* empty */
   83        | AddOp Term Summand

   84 MulOp: T_MULOP
   85      | T_DIV
   86      | T_MOD
   87      | T_AND

   88 Factor: T_INT
   89       | T_STR
   90       | Variable
   91       | FunctionReference
   92       | T_NOT Factor
   93       | '(' Expression ')'

   94 Multiplicand: /* empty */
   95             | MulOp Factor Multiplicand

   96 FunctionReference: T_ID '(' ActualParameterList ')'

   97 Variable: T_ID ComponentSelection

   98 ComponentSelection: /* empty */
   99                   | '.' T_ID ComponentSelection
  100                   | '[' Expression ']' ComponentSelection

  101 ActualParameterList: /* empty */
  102                    | Expression OptExpressions

  103 OptExpressions: /* empty */
  104               | ',' Expression OptExpressions

  105 $@19: /* empty */

  106 IdentifierList: T_ID $@19 Identifiers

  107 Identifiers: /* empty */

  108 $@20: /* empty */

  109 Identifiers: ',' T_ID $@20 Identifiers

  110 Sign: '+'
  111     | '-'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26 29 50 93 96
')' (41) 26 29 50 93 96
'+' (43) 110
',' (44) 104 109
'-' (45) 111
'.' (46) 2 99
':' (58) 13 29 36 39 70
';' (59) 2 3 7 11 17 21 26 29 39 58
'=' (61) 10 76
'[' (91) 63 100
']' (93) 63 100
error (256)
T_AND (258) 87
T_BEGIN (259) 42
T_FORWARD (260) 31
T_DIV (261) 85
T_DO (262) 53 54
T_ELSE (263) 56
T_END (264) 42 66
T_FOR (265) 54
T_FUNCTION (266) 29
T_IF (267) 52
T_ARRAY (268) 63
T_MOD (269) 86
T_NOT (270) 92
T_OF (271) 63
T_OR (272) 80
T_PROCEDURE (273) 26
T_PROGRAM (274) 2
T_RECORD (275) 66
T_THEN (276) 52
T_TO (277) 54
T_TYPE (278) 3
T_VAR (279) 11
T_WHILE (280) 53
T_ID (281) 2 10 26 29 50 54 60 67 96 97 99 106 109
T_INT (282) 71 72 88
T_STR (283) 89
T_ASSIGNMENT (284) 49 54
T_RANGE (285) 63
T_RELOP (286) 75
T_MULOP (287) 84
T_ADDOP (288) 79


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
Program (46)
    on left: 2, on right: 0
$@1 (47)
    on left: 1, on right: 2
TypeDefinitions (48)
    on left: 3, on right: 5
OptTypeDefinitions (49)
    on left: 4 5, on right: 2
_OptTypeDefinitions (50)
    on left: 6 7, on right: 3 7
TypeDefinition (51)
    on left: 10, on right: 3 7
$@2 (52)
    on left: 8, on right: 10
$@3 (53)
    on left: 9, on right: 10
VariableDeclarations (54)
    on left: 11, on right: 15 41
VariableDeclaration (55)
    on left: 13, on right: 11 17
$@4 (56)
    on left: 12, on right: 13
OptVariableDeclarations (57)
    on left: 14 15, on right: 2
_OptVariableDeclarations (58)
    on left: 16 17, on right: 11 17
OptSubprogramDeclarations (59)
    on left: 18 19, on right: 2
SubprogramDeclarations (60)
    on left: 20 21, on right: 19 21
SubprogramDeclaration (61)
    on left: 22 23, on right: 21
ProcedureDeclaration (62)
    on left: 26, on right: 22
$@5 (63)
    on left: 24, on right: 26
$@6 (64)
    on left: 25, on right: 26
FunctionDeclaration (65)
    on left: 29, on right: 23
$@7 (66)
    on left: 27, on right: 29
$@8 (67)
    on left: 28, on right: 29
DeclarationBody (68)
    on left: 30 31, on right: 26 29
FormalParameterList (69)
    on left: 33 36, on right: 26 29
$@9 (70)
    on left: 32, on right: 33
$@10 (71)
    on left: 34, on right: 36
$@11 (72)
    on left: 35, on right: 36
OptIdentifiers (73)
    on left: 37 39, on right: 36 39 70
$@12 (74)
    on left: 38, on right: 39
Block (75)
    on left: 40 41, on right: 30
CompoundStatement (76)
    on left: 42, on right: 2 40 41 51
StatementSequence (77)
    on left: 43, on right: 42
Statement (78)
    on left: 44 45, on right: 43 52 53 54 56 58
SimpleStatement (79)
    on left: 46 47 48, on right: 44
AssignmentStatement (80)
    on left: 49, on right: 47
ProcedureStatement (81)
    on left: 50, on right: 48
StructuredStatement (82)
    on left: 51 52 53 54, on right: 45
CloseIf (83)
    on left: 55 56, on right: 52
Statements (84)
    on left: 57 58, on right: 43 58
Type (85)
    on left: 60 63 66, on right: 10 13 36 39 63 70
$@13 (86)
    on left: 59, on right: 60
$@14 (87)
    on left: 61, on right: 63
$@15 (88)
    on left: 62, on right: 63
$@16 (89)
    on left: 64, on right: 66
$@17 (90)
    on left: 65, on right: 66
ResultType (91)
    on left: 67, on right: 29
FieldList (92)
    on left: 68 70, on right: 66
$@18 (93)
    on left: 69, on right: 70
Constant (94)
    on left: 71 72, on right: 63
Expression (95)
    on left: 73 74, on right: 49 52 53 54 93 100 102 104
RelationalOp (96)
    on left: 75 76, on right: 74
SimpleExpression (97)
    on left: 77 78, on right: 73 74
AddOp (98)
    on left: 79 80, on right: 83
Term (99)
    on left: 81, on right: 77 78 83
Summand (100)
    on left: 82 83, on right: 77 78 83
MulOp (101)
    on left: 84 85 86 87, on right: 95
Factor (102)
    on left: 88 89 90 91 92 93, on right: 81 92 95
Multiplicand (103)
    on left: 94 95, on right: 81 95
FunctionReference (104)
    on left: 96, on right: 91
Variable (105)
    on left: 97, on right: 49 90
ComponentSelection (106)
    on left: 98 99 100, on right: 97 99 100
ActualParameterList (107)
    on left: 101 102, on right: 50 96
OptExpressions (108)
    on left: 103 104, on right: 102 104
IdentifierList (109)
    on left: 106, on right: 13 36 39 70
$@19 (110)
    on left: 105, on right: 106
Identifiers (111)
    on left: 107 109, on right: 106 109
$@20 (112)
    on left: 108, on right: 109
Sign (113)
    on left: 110 111, on right: 72 78


state 0

    0 $accept: . Program $end

    T_PROGRAM  shift, and go to state 1

    Program  go to state 2


state 1

    2 Program: T_PROGRAM . T_ID $@1 ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.'

    T_ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    2 Program: T_PROGRAM T_ID . $@1 ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    2 Program: T_PROGRAM T_ID $@1 . ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.'

    ';'  shift, and go to state 6


state 6

    2 Program: T_PROGRAM T_ID $@1 ';' . OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.'

    T_TYPE  shift, and go to state 7

    $default  reduce using rule 4 (OptTypeDefinitions)

    TypeDefinitions     go to state 8
    OptTypeDefinitions  go to state 9


state 7

    3 TypeDefinitions: T_TYPE . TypeDefinition ';' _OptTypeDefinitions

    T_ID  shift, and go to state 10

    TypeDefinition  go to state 11


state 8

    5 OptTypeDefinitions: TypeDefinitions .

    $default  reduce using rule 5 (OptTypeDefinitions)


state 9

    2 Program: T_PROGRAM T_ID $@1 ';' OptTypeDefinitions . OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.'

    T_VAR  shift, and go to state 12

    $default  reduce using rule 14 (OptVariableDeclarations)

    VariableDeclarations     go to state 13
    OptVariableDeclarations  go to state 14


state 10

   10 TypeDefinition: T_ID . $@2 '=' Type $@3

    $default  reduce using rule 8 ($@2)

    $@2  go to state 15


state 11

    3 TypeDefinitions: T_TYPE TypeDefinition . ';' _OptTypeDefinitions

    ';'  shift, and go to state 16


state 12

   11 VariableDeclarations: T_VAR . VariableDeclaration ';' _OptVariableDeclarations

    T_ID  shift, and go to state 17

    VariableDeclaration  go to state 18
    IdentifierList       go to state 19


state 13

   15 OptVariableDeclarations: VariableDeclarations .

    $default  reduce using rule 15 (OptVariableDeclarations)


state 14

    2 Program: T_PROGRAM T_ID $@1 ';' OptTypeDefinitions OptVariableDeclarations . OptSubprogramDeclarations CompoundStatement '.'

    T_FUNCTION   shift, and go to state 20
    T_PROCEDURE  shift, and go to state 21

    T_BEGIN   reduce using rule 18 (OptSubprogramDeclarations)
    T_BEGIN   [reduce using rule 20 (SubprogramDeclarations)]
    $default  reduce using rule 18 (OptSubprogramDeclarations)

    OptSubprogramDeclarations  go to state 22
    SubprogramDeclarations     go to state 23
    SubprogramDeclaration      go to state 24
    ProcedureDeclaration       go to state 25
    FunctionDeclaration        go to state 26


state 15

   10 TypeDefinition: T_ID $@2 . '=' Type $@3

    '='  shift, and go to state 27


state 16

    3 TypeDefinitions: T_TYPE TypeDefinition ';' . _OptTypeDefinitions

    T_ID  shift, and go to state 10

    $default  reduce using rule 6 (_OptTypeDefinitions)

    _OptTypeDefinitions  go to state 28
    TypeDefinition       go to state 29


state 17

  106 IdentifierList: T_ID . $@19 Identifiers

    $default  reduce using rule 105 ($@19)

    $@19  go to state 30


state 18

   11 VariableDeclarations: T_VAR VariableDeclaration . ';' _OptVariableDeclarations

    ';'  shift, and go to state 31


state 19

   13 VariableDeclaration: IdentifierList . ':' Type $@4

    ':'  shift, and go to state 32


state 20

   29 FunctionDeclaration: T_FUNCTION . T_ID $@7 '(' FormalParameterList $@8 ')' ':' ResultType ';' DeclarationBody

    T_ID  shift, and go to state 33


state 21

   26 ProcedureDeclaration: T_PROCEDURE . T_ID $@5 '(' FormalParameterList $@6 ')' ';' DeclarationBody

    T_ID  shift, and go to state 34


state 22

    2 Program: T_PROGRAM T_ID $@1 ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations . CompoundStatement '.'

    T_BEGIN  shift, and go to state 35

    CompoundStatement  go to state 36


state 23

   19 OptSubprogramDeclarations: SubprogramDeclarations .

    $default  reduce using rule 19 (OptSubprogramDeclarations)


state 24

   21 SubprogramDeclarations: SubprogramDeclaration . ';' SubprogramDeclarations

    ';'  shift, and go to state 37


state 25

   22 SubprogramDeclaration: ProcedureDeclaration .

    $default  reduce using rule 22 (SubprogramDeclaration)


state 26

   23 SubprogramDeclaration: FunctionDeclaration .

    $default  reduce using rule 23 (SubprogramDeclaration)


state 27

   10 TypeDefinition: T_ID $@2 '=' . Type $@3

    T_ARRAY   shift, and go to state 38
    T_RECORD  shift, and go to state 39
    T_ID      shift, and go to state 40

    Type  go to state 41


state 28

    3 TypeDefinitions: T_TYPE TypeDefinition ';' _OptTypeDefinitions .

    $default  reduce using rule 3 (TypeDefinitions)


state 29

    7 _OptTypeDefinitions: TypeDefinition . ';' _OptTypeDefinitions

    ';'  shift, and go to state 42


state 30

  106 IdentifierList: T_ID $@19 . Identifiers

    ','  shift, and go to state 43

    $default  reduce using rule 107 (Identifiers)

    Identifiers  go to state 44


state 31

   11 VariableDeclarations: T_VAR VariableDeclaration ';' . _OptVariableDeclarations

    T_ID  shift, and go to state 17

    $default  reduce using rule 16 (_OptVariableDeclarations)

    VariableDeclaration       go to state 45
    _OptVariableDeclarations  go to state 46
    IdentifierList            go to state 19


state 32

   13 VariableDeclaration: IdentifierList ':' . Type $@4

    T_ARRAY   shift, and go to state 38
    T_RECORD  shift, and go to state 39
    T_ID      shift, and go to state 40

    Type  go to state 47


state 33

   29 FunctionDeclaration: T_FUNCTION T_ID . $@7 '(' FormalParameterList $@8 ')' ':' ResultType ';' DeclarationBody

    $default  reduce using rule 27 ($@7)

    $@7  go to state 48


state 34

   26 ProcedureDeclaration: T_PROCEDURE T_ID . $@5 '(' FormalParameterList $@6 ')' ';' DeclarationBody

    $default  reduce using rule 24 ($@5)

    $@5  go to state 49


state 35

   42 CompoundStatement: T_BEGIN . StatementSequence T_END

    T_BEGIN  shift, and go to state 35
    T_FOR    shift, and go to state 50
    T_IF     shift, and go to state 51
    T_WHILE  shift, and go to state 52
    T_ID     shift, and go to state 53

    $default  reduce using rule 46 (SimpleStatement)

    CompoundStatement    go to state 54
    StatementSequence    go to state 55
    Statement            go to state 56
    SimpleStatement      go to state 57
    AssignmentStatement  go to state 58
    ProcedureStatement   go to state 59
    StructuredStatement  go to state 60
    Variable             go to state 61


state 36

    2 Program: T_PROGRAM T_ID $@1 ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement . '.'

    '.'  shift, and go to state 62


state 37

   21 SubprogramDeclarations: SubprogramDeclaration ';' . SubprogramDeclarations

    T_FUNCTION   shift, and go to state 20
    T_PROCEDURE  shift, and go to state 21

    $default  reduce using rule 20 (SubprogramDeclarations)

    SubprogramDeclarations  go to state 63
    SubprogramDeclaration   go to state 24
    ProcedureDeclaration    go to state 25
    FunctionDeclaration     go to state 26


state 38

   63 Type: T_ARRAY . '[' Constant T_RANGE Constant ']' T_OF $@14 Type $@15

    '['  shift, and go to state 64


state 39

   66 Type: T_RECORD . $@16 FieldList T_END $@17

    $default  reduce using rule 64 ($@16)

    $@16  go to state 65


state 40

   60 Type: T_ID . $@13

    $default  reduce using rule 59 ($@13)

    $@13  go to state 66


state 41

   10 TypeDefinition: T_ID $@2 '=' Type . $@3

    $default  reduce using rule 9 ($@3)

    $@3  go to state 67


state 42

    7 _OptTypeDefinitions: TypeDefinition ';' . _OptTypeDefinitions

    T_ID  shift, and go to state 10

    $default  reduce using rule 6 (_OptTypeDefinitions)

    _OptTypeDefinitions  go to state 68
    TypeDefinition       go to state 29


state 43

  109 Identifiers: ',' . T_ID $@20 Identifiers

    T_ID  shift, and go to state 69


state 44

  106 IdentifierList: T_ID $@19 Identifiers .

    $default  reduce using rule 106 (IdentifierList)


state 45

   17 _OptVariableDeclarations: VariableDeclaration . ';' _OptVariableDeclarations

    ';'  shift, and go to state 70


state 46

   11 VariableDeclarations: T_VAR VariableDeclaration ';' _OptVariableDeclarations .

    $default  reduce using rule 11 (VariableDeclarations)


state 47

   13 VariableDeclaration: IdentifierList ':' Type . $@4

    $default  reduce using rule 12 ($@4)

    $@4  go to state 71


state 48

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 . '(' FormalParameterList $@8 ')' ':' ResultType ';' DeclarationBody

    '('  shift, and go to state 72


state 49

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 . '(' FormalParameterList $@6 ')' ';' DeclarationBody

    '('  shift, and go to state 73


state 50

   54 StructuredStatement: T_FOR . T_ID T_ASSIGNMENT Expression T_TO Expression T_DO Statement

    T_ID  shift, and go to state 74


state 51

   52 StructuredStatement: T_IF . Expression T_THEN Statement CloseIf

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 82
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 52

   53 StructuredStatement: T_WHILE . Expression T_DO Statement

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 89
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 53

   50 ProcedureStatement: T_ID . '(' ActualParameterList ')'
   97 Variable: T_ID . ComponentSelection

    '.'  shift, and go to state 90
    '('  shift, and go to state 91
    '['  shift, and go to state 92

    $default  reduce using rule 98 (ComponentSelection)

    ComponentSelection  go to state 93


state 54

   51 StructuredStatement: CompoundStatement .

    $default  reduce using rule 51 (StructuredStatement)


state 55

   42 CompoundStatement: T_BEGIN StatementSequence . T_END

    T_END  shift, and go to state 94


state 56

   43 StatementSequence: Statement . Statements

    ';'  shift, and go to state 95

    $default  reduce using rule 57 (Statements)

    Statements  go to state 96


state 57

   44 Statement: SimpleStatement .

    $default  reduce using rule 44 (Statement)


state 58

   47 SimpleStatement: AssignmentStatement .

    $default  reduce using rule 47 (SimpleStatement)


state 59

   48 SimpleStatement: ProcedureStatement .

    $default  reduce using rule 48 (SimpleStatement)


state 60

   45 Statement: StructuredStatement .

    $default  reduce using rule 45 (Statement)


state 61

   49 AssignmentStatement: Variable . T_ASSIGNMENT Expression

    T_ASSIGNMENT  shift, and go to state 97


state 62

    2 Program: T_PROGRAM T_ID $@1 ';' OptTypeDefinitions OptVariableDeclarations OptSubprogramDeclarations CompoundStatement '.' .

    $default  reduce using rule 2 (Program)


state 63

   21 SubprogramDeclarations: SubprogramDeclaration ';' SubprogramDeclarations .

    $default  reduce using rule 21 (SubprogramDeclarations)


state 64

   63 Type: T_ARRAY '[' . Constant T_RANGE Constant ']' T_OF $@14 Type $@15

    T_INT  shift, and go to state 98
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Constant  go to state 99
    Sign      go to state 100


state 65

   66 Type: T_RECORD $@16 . FieldList T_END $@17

    T_ID  shift, and go to state 17

    $default  reduce using rule 68 (FieldList)

    FieldList       go to state 101
    IdentifierList  go to state 102


state 66

   60 Type: T_ID $@13 .

    $default  reduce using rule 60 (Type)


state 67

   10 TypeDefinition: T_ID $@2 '=' Type $@3 .

    $default  reduce using rule 10 (TypeDefinition)


state 68

    7 _OptTypeDefinitions: TypeDefinition ';' _OptTypeDefinitions .

    $default  reduce using rule 7 (_OptTypeDefinitions)


state 69

  109 Identifiers: ',' T_ID . $@20 Identifiers

    $default  reduce using rule 108 ($@20)

    $@20  go to state 103


state 70

   17 _OptVariableDeclarations: VariableDeclaration ';' . _OptVariableDeclarations

    T_ID  shift, and go to state 17

    $default  reduce using rule 16 (_OptVariableDeclarations)

    VariableDeclaration       go to state 45
    _OptVariableDeclarations  go to state 104
    IdentifierList            go to state 19


state 71

   13 VariableDeclaration: IdentifierList ':' Type $@4 .

    $default  reduce using rule 13 (VariableDeclaration)


state 72

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' . FormalParameterList $@8 ')' ':' ResultType ';' DeclarationBody

    T_ID      reduce using rule 34 ($@10)
    $default  reduce using rule 32 ($@9)

    FormalParameterList  go to state 105
    $@9                  go to state 106
    $@10                 go to state 107


state 73

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' . FormalParameterList $@6 ')' ';' DeclarationBody

    T_ID      reduce using rule 34 ($@10)
    $default  reduce using rule 32 ($@9)

    FormalParameterList  go to state 108
    $@9                  go to state 106
    $@10                 go to state 107


state 74

   54 StructuredStatement: T_FOR T_ID . T_ASSIGNMENT Expression T_TO Expression T_DO Statement

    T_ASSIGNMENT  shift, and go to state 109


state 75

   92 Factor: T_NOT . Factor

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79

    Factor             go to state 110
    FunctionReference  go to state 86
    Variable           go to state 87


state 76

   96 FunctionReference: T_ID . '(' ActualParameterList ')'
   97 Variable: T_ID . ComponentSelection

    '.'  shift, and go to state 90
    '('  shift, and go to state 111
    '['  shift, and go to state 92

    $default  reduce using rule 98 (ComponentSelection)

    ComponentSelection  go to state 93


state 77

   88 Factor: T_INT .

    $default  reduce using rule 88 (Factor)


state 78

   89 Factor: T_STR .

    $default  reduce using rule 89 (Factor)


state 79

   93 Factor: '(' . Expression ')'

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 112
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 80

  110 Sign: '+' .

    $default  reduce using rule 110 (Sign)


state 81

  111 Sign: '-' .

    $default  reduce using rule 111 (Sign)


state 82

   52 StructuredStatement: T_IF Expression . T_THEN Statement CloseIf

    T_THEN  shift, and go to state 113


state 83

   73 Expression: SimpleExpression .
   74           | SimpleExpression . RelationalOp SimpleExpression

    T_RELOP  shift, and go to state 114
    '='      shift, and go to state 115

    $default  reduce using rule 73 (Expression)

    RelationalOp  go to state 116


state 84

   77 SimpleExpression: Term . Summand

    T_OR     shift, and go to state 117
    T_ADDOP  shift, and go to state 118

    $default  reduce using rule 82 (Summand)

    AddOp    go to state 119
    Summand  go to state 120


state 85

   81 Term: Factor . Multiplicand

    T_AND    shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_MOD    shift, and go to state 123
    T_MULOP  shift, and go to state 124

    $default  reduce using rule 94 (Multiplicand)

    MulOp         go to state 125
    Multiplicand  go to state 126


state 86

   91 Factor: FunctionReference .

    $default  reduce using rule 91 (Factor)


state 87

   90 Factor: Variable .

    $default  reduce using rule 90 (Factor)


state 88

   78 SimpleExpression: Sign . Term Summand

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79

    Term               go to state 127
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87


state 89

   53 StructuredStatement: T_WHILE Expression . T_DO Statement

    T_DO  shift, and go to state 128


state 90

   99 ComponentSelection: '.' . T_ID ComponentSelection

    T_ID  shift, and go to state 129


state 91

   50 ProcedureStatement: T_ID '(' . ActualParameterList ')'

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    $default  reduce using rule 101 (ActualParameterList)

    Expression           go to state 130
    SimpleExpression     go to state 83
    Term                 go to state 84
    Factor               go to state 85
    FunctionReference    go to state 86
    Variable             go to state 87
    ActualParameterList  go to state 131
    Sign                 go to state 88


state 92

  100 ComponentSelection: '[' . Expression ']' ComponentSelection

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 132
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 93

   97 Variable: T_ID ComponentSelection .

    $default  reduce using rule 97 (Variable)


state 94

   42 CompoundStatement: T_BEGIN StatementSequence T_END .

    $default  reduce using rule 42 (CompoundStatement)


state 95

   58 Statements: ';' . Statement Statements

    T_BEGIN  shift, and go to state 35
    T_FOR    shift, and go to state 50
    T_IF     shift, and go to state 51
    T_WHILE  shift, and go to state 52
    T_ID     shift, and go to state 53

    $default  reduce using rule 46 (SimpleStatement)

    CompoundStatement    go to state 54
    Statement            go to state 133
    SimpleStatement      go to state 57
    AssignmentStatement  go to state 58
    ProcedureStatement   go to state 59
    StructuredStatement  go to state 60
    Variable             go to state 61


state 96

   43 StatementSequence: Statement Statements .

    $default  reduce using rule 43 (StatementSequence)


state 97

   49 AssignmentStatement: Variable T_ASSIGNMENT . Expression

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 134
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 98

   71 Constant: T_INT .

    $default  reduce using rule 71 (Constant)


state 99

   63 Type: T_ARRAY '[' Constant . T_RANGE Constant ']' T_OF $@14 Type $@15

    T_RANGE  shift, and go to state 135


state 100

   72 Constant: Sign . T_INT

    T_INT  shift, and go to state 136


state 101

   66 Type: T_RECORD $@16 FieldList . T_END $@17

    T_END  shift, and go to state 137


state 102

   70 FieldList: IdentifierList . ':' Type $@18 OptIdentifiers

    ':'  shift, and go to state 138


state 103

  109 Identifiers: ',' T_ID $@20 . Identifiers

    ','  shift, and go to state 43

    $default  reduce using rule 107 (Identifiers)

    Identifiers  go to state 139


state 104

   17 _OptVariableDeclarations: VariableDeclaration ';' _OptVariableDeclarations .

    $default  reduce using rule 17 (_OptVariableDeclarations)


state 105

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList . $@8 ')' ':' ResultType ';' DeclarationBody

    $default  reduce using rule 28 ($@8)

    $@8  go to state 140


state 106

   33 FormalParameterList: $@9 .

    $default  reduce using rule 33 (FormalParameterList)


state 107

   36 FormalParameterList: $@10 . IdentifierList ':' Type $@11 OptIdentifiers

    T_ID  shift, and go to state 17

    IdentifierList  go to state 141


state 108

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' FormalParameterList . $@6 ')' ';' DeclarationBody

    $default  reduce using rule 25 ($@6)

    $@6  go to state 142


state 109

   54 StructuredStatement: T_FOR T_ID T_ASSIGNMENT . Expression T_TO Expression T_DO Statement

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 143
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 110

   92 Factor: T_NOT Factor .

    $default  reduce using rule 92 (Factor)


state 111

   96 FunctionReference: T_ID '(' . ActualParameterList ')'

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    $default  reduce using rule 101 (ActualParameterList)

    Expression           go to state 130
    SimpleExpression     go to state 83
    Term                 go to state 84
    Factor               go to state 85
    FunctionReference    go to state 86
    Variable             go to state 87
    ActualParameterList  go to state 144
    Sign                 go to state 88


state 112

   93 Factor: '(' Expression . ')'

    ')'  shift, and go to state 145


state 113

   52 StructuredStatement: T_IF Expression T_THEN . Statement CloseIf

    T_BEGIN  shift, and go to state 35
    T_FOR    shift, and go to state 50
    T_IF     shift, and go to state 51
    T_WHILE  shift, and go to state 52
    T_ID     shift, and go to state 53

    $default  reduce using rule 46 (SimpleStatement)

    CompoundStatement    go to state 54
    Statement            go to state 146
    SimpleStatement      go to state 57
    AssignmentStatement  go to state 58
    ProcedureStatement   go to state 59
    StructuredStatement  go to state 60
    Variable             go to state 61


state 114

   75 RelationalOp: T_RELOP .

    $default  reduce using rule 75 (RelationalOp)


state 115

   76 RelationalOp: '=' .

    $default  reduce using rule 76 (RelationalOp)


state 116

   74 Expression: SimpleExpression RelationalOp . SimpleExpression

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    SimpleExpression   go to state 147
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 117

   80 AddOp: T_OR .

    $default  reduce using rule 80 (AddOp)


state 118

   79 AddOp: T_ADDOP .

    $default  reduce using rule 79 (AddOp)


state 119

   83 Summand: AddOp . Term Summand

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79

    Term               go to state 148
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87


state 120

   77 SimpleExpression: Term Summand .

    $default  reduce using rule 77 (SimpleExpression)


state 121

   87 MulOp: T_AND .

    $default  reduce using rule 87 (MulOp)


state 122

   85 MulOp: T_DIV .

    $default  reduce using rule 85 (MulOp)


state 123

   86 MulOp: T_MOD .

    $default  reduce using rule 86 (MulOp)


state 124

   84 MulOp: T_MULOP .

    $default  reduce using rule 84 (MulOp)


state 125

   95 Multiplicand: MulOp . Factor Multiplicand

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79

    Factor             go to state 149
    FunctionReference  go to state 86
    Variable           go to state 87


state 126

   81 Term: Factor Multiplicand .

    $default  reduce using rule 81 (Term)


state 127

   78 SimpleExpression: Sign Term . Summand

    T_OR     shift, and go to state 117
    T_ADDOP  shift, and go to state 118

    $default  reduce using rule 82 (Summand)

    AddOp    go to state 119
    Summand  go to state 150


state 128

   53 StructuredStatement: T_WHILE Expression T_DO . Statement

    T_BEGIN  shift, and go to state 35
    T_FOR    shift, and go to state 50
    T_IF     shift, and go to state 51
    T_WHILE  shift, and go to state 52
    T_ID     shift, and go to state 53

    $default  reduce using rule 46 (SimpleStatement)

    CompoundStatement    go to state 54
    Statement            go to state 151
    SimpleStatement      go to state 57
    AssignmentStatement  go to state 58
    ProcedureStatement   go to state 59
    StructuredStatement  go to state 60
    Variable             go to state 61


state 129

   99 ComponentSelection: '.' T_ID . ComponentSelection

    '.'  shift, and go to state 90
    '['  shift, and go to state 92

    $default  reduce using rule 98 (ComponentSelection)

    ComponentSelection  go to state 152


state 130

  102 ActualParameterList: Expression . OptExpressions

    ','  shift, and go to state 153

    $default  reduce using rule 103 (OptExpressions)

    OptExpressions  go to state 154


state 131

   50 ProcedureStatement: T_ID '(' ActualParameterList . ')'

    ')'  shift, and go to state 155


state 132

  100 ComponentSelection: '[' Expression . ']' ComponentSelection

    ']'  shift, and go to state 156


state 133

   58 Statements: ';' Statement . Statements

    ';'  shift, and go to state 95

    $default  reduce using rule 57 (Statements)

    Statements  go to state 157


state 134

   49 AssignmentStatement: Variable T_ASSIGNMENT Expression .

    $default  reduce using rule 49 (AssignmentStatement)


state 135

   63 Type: T_ARRAY '[' Constant T_RANGE . Constant ']' T_OF $@14 Type $@15

    T_INT  shift, and go to state 98
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Constant  go to state 158
    Sign      go to state 100


state 136

   72 Constant: Sign T_INT .

    $default  reduce using rule 72 (Constant)


state 137

   66 Type: T_RECORD $@16 FieldList T_END . $@17

    $default  reduce using rule 65 ($@17)

    $@17  go to state 159


state 138

   70 FieldList: IdentifierList ':' . Type $@18 OptIdentifiers

    T_ARRAY   shift, and go to state 38
    T_RECORD  shift, and go to state 39
    T_ID      shift, and go to state 40

    Type  go to state 160


state 139

  109 Identifiers: ',' T_ID $@20 Identifiers .

    $default  reduce using rule 109 (Identifiers)


state 140

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 . ')' ':' ResultType ';' DeclarationBody

    ')'  shift, and go to state 161


state 141

   36 FormalParameterList: $@10 IdentifierList . ':' Type $@11 OptIdentifiers

    ':'  shift, and go to state 162


state 142

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' FormalParameterList $@6 . ')' ';' DeclarationBody

    ')'  shift, and go to state 163


state 143

   54 StructuredStatement: T_FOR T_ID T_ASSIGNMENT Expression . T_TO Expression T_DO Statement

    T_TO  shift, and go to state 164


state 144

   96 FunctionReference: T_ID '(' ActualParameterList . ')'

    ')'  shift, and go to state 165


state 145

   93 Factor: '(' Expression ')' .

    $default  reduce using rule 93 (Factor)


state 146

   52 StructuredStatement: T_IF Expression T_THEN Statement . CloseIf

    T_ELSE  shift, and go to state 166

    T_ELSE    [reduce using rule 55 (CloseIf)]
    $default  reduce using rule 55 (CloseIf)

    CloseIf  go to state 167


state 147

   74 Expression: SimpleExpression RelationalOp SimpleExpression .

    $default  reduce using rule 74 (Expression)


state 148

   83 Summand: AddOp Term . Summand

    T_OR     shift, and go to state 117
    T_ADDOP  shift, and go to state 118

    $default  reduce using rule 82 (Summand)

    AddOp    go to state 119
    Summand  go to state 168


state 149

   95 Multiplicand: MulOp Factor . Multiplicand

    T_AND    shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_MOD    shift, and go to state 123
    T_MULOP  shift, and go to state 124

    $default  reduce using rule 94 (Multiplicand)

    MulOp         go to state 125
    Multiplicand  go to state 169


state 150

   78 SimpleExpression: Sign Term Summand .

    $default  reduce using rule 78 (SimpleExpression)


state 151

   53 StructuredStatement: T_WHILE Expression T_DO Statement .

    $default  reduce using rule 53 (StructuredStatement)


state 152

   99 ComponentSelection: '.' T_ID ComponentSelection .

    $default  reduce using rule 99 (ComponentSelection)


state 153

  104 OptExpressions: ',' . Expression OptExpressions

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 170
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 154

  102 ActualParameterList: Expression OptExpressions .

    $default  reduce using rule 102 (ActualParameterList)


state 155

   50 ProcedureStatement: T_ID '(' ActualParameterList ')' .

    $default  reduce using rule 50 (ProcedureStatement)


state 156

  100 ComponentSelection: '[' Expression ']' . ComponentSelection

    '.'  shift, and go to state 90
    '['  shift, and go to state 92

    $default  reduce using rule 98 (ComponentSelection)

    ComponentSelection  go to state 171


state 157

   58 Statements: ';' Statement Statements .

    $default  reduce using rule 58 (Statements)


state 158

   63 Type: T_ARRAY '[' Constant T_RANGE Constant . ']' T_OF $@14 Type $@15

    ']'  shift, and go to state 172


state 159

   66 Type: T_RECORD $@16 FieldList T_END $@17 .

    $default  reduce using rule 66 (Type)


state 160

   70 FieldList: IdentifierList ':' Type . $@18 OptIdentifiers

    $default  reduce using rule 69 ($@18)

    $@18  go to state 173


state 161

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 ')' . ':' ResultType ';' DeclarationBody

    ':'  shift, and go to state 174


state 162

   36 FormalParameterList: $@10 IdentifierList ':' . Type $@11 OptIdentifiers

    T_ARRAY   shift, and go to state 38
    T_RECORD  shift, and go to state 39
    T_ID      shift, and go to state 40

    Type  go to state 175


state 163

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' FormalParameterList $@6 ')' . ';' DeclarationBody

    ';'  shift, and go to state 176


state 164

   54 StructuredStatement: T_FOR T_ID T_ASSIGNMENT Expression T_TO . Expression T_DO Statement

    T_NOT  shift, and go to state 75
    T_ID   shift, and go to state 76
    T_INT  shift, and go to state 77
    T_STR  shift, and go to state 78
    '('    shift, and go to state 79
    '+'    shift, and go to state 80
    '-'    shift, and go to state 81

    Expression         go to state 177
    SimpleExpression   go to state 83
    Term               go to state 84
    Factor             go to state 85
    FunctionReference  go to state 86
    Variable           go to state 87
    Sign               go to state 88


state 165

   96 FunctionReference: T_ID '(' ActualParameterList ')' .

    $default  reduce using rule 96 (FunctionReference)


state 166

   56 CloseIf: T_ELSE . Statement

    T_BEGIN  shift, and go to state 35
    T_FOR    shift, and go to state 50
    T_IF     shift, and go to state 51
    T_WHILE  shift, and go to state 52
    T_ID     shift, and go to state 53

    $default  reduce using rule 46 (SimpleStatement)

    CompoundStatement    go to state 54
    Statement            go to state 178
    SimpleStatement      go to state 57
    AssignmentStatement  go to state 58
    ProcedureStatement   go to state 59
    StructuredStatement  go to state 60
    Variable             go to state 61


state 167

   52 StructuredStatement: T_IF Expression T_THEN Statement CloseIf .

    $default  reduce using rule 52 (StructuredStatement)


state 168

   83 Summand: AddOp Term Summand .

    $default  reduce using rule 83 (Summand)


state 169

   95 Multiplicand: MulOp Factor Multiplicand .

    $default  reduce using rule 95 (Multiplicand)


state 170

  104 OptExpressions: ',' Expression . OptExpressions

    ','  shift, and go to state 153

    $default  reduce using rule 103 (OptExpressions)

    OptExpressions  go to state 179


state 171

  100 ComponentSelection: '[' Expression ']' ComponentSelection .

    $default  reduce using rule 100 (ComponentSelection)


state 172

   63 Type: T_ARRAY '[' Constant T_RANGE Constant ']' . T_OF $@14 Type $@15

    T_OF  shift, and go to state 180


state 173

   70 FieldList: IdentifierList ':' Type $@18 . OptIdentifiers

    ';'  shift, and go to state 181

    $default  reduce using rule 37 (OptIdentifiers)

    OptIdentifiers  go to state 182


state 174

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 ')' ':' . ResultType ';' DeclarationBody

    T_ID  shift, and go to state 183

    ResultType  go to state 184


state 175

   36 FormalParameterList: $@10 IdentifierList ':' Type . $@11 OptIdentifiers

    $default  reduce using rule 35 ($@11)

    $@11  go to state 185


state 176

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' FormalParameterList $@6 ')' ';' . DeclarationBody

    T_BEGIN    shift, and go to state 35
    T_FORWARD  shift, and go to state 186
    T_VAR      shift, and go to state 12

    VariableDeclarations  go to state 187
    DeclarationBody       go to state 188
    Block                 go to state 189
    CompoundStatement     go to state 190


state 177

   54 StructuredStatement: T_FOR T_ID T_ASSIGNMENT Expression T_TO Expression . T_DO Statement

    T_DO  shift, and go to state 191


state 178

   56 CloseIf: T_ELSE Statement .

    $default  reduce using rule 56 (CloseIf)


state 179

  104 OptExpressions: ',' Expression OptExpressions .

    $default  reduce using rule 104 (OptExpressions)


state 180

   63 Type: T_ARRAY '[' Constant T_RANGE Constant ']' T_OF . $@14 Type $@15

    $default  reduce using rule 61 ($@14)

    $@14  go to state 192


state 181

   39 OptIdentifiers: ';' . IdentifierList ':' Type $@12 OptIdentifiers

    T_ID  shift, and go to state 17

    IdentifierList  go to state 193


state 182

   70 FieldList: IdentifierList ':' Type $@18 OptIdentifiers .

    $default  reduce using rule 70 (FieldList)


state 183

   67 ResultType: T_ID .

    $default  reduce using rule 67 (ResultType)


state 184

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 ')' ':' ResultType . ';' DeclarationBody

    ';'  shift, and go to state 194


state 185

   36 FormalParameterList: $@10 IdentifierList ':' Type $@11 . OptIdentifiers

    ';'  shift, and go to state 181

    $default  reduce using rule 37 (OptIdentifiers)

    OptIdentifiers  go to state 195


state 186

   31 DeclarationBody: T_FORWARD .

    $default  reduce using rule 31 (DeclarationBody)


state 187

   41 Block: VariableDeclarations . CompoundStatement

    T_BEGIN  shift, and go to state 35

    CompoundStatement  go to state 196


state 188

   26 ProcedureDeclaration: T_PROCEDURE T_ID $@5 '(' FormalParameterList $@6 ')' ';' DeclarationBody .

    $default  reduce using rule 26 (ProcedureDeclaration)


state 189

   30 DeclarationBody: Block .

    $default  reduce using rule 30 (DeclarationBody)


state 190

   40 Block: CompoundStatement .

    $default  reduce using rule 40 (Block)


state 191

   54 StructuredStatement: T_FOR T_ID T_ASSIGNMENT Expression T_TO Expression T_DO . Statement

    T_BEGIN  shift, and go to state 35
    T_FOR    shift, and go to state 50
    T_IF     shift, and go to state 51
    T_WHILE  shift, and go to state 52
    T_ID     shift, and go to state 53

    $default  reduce using rule 46 (SimpleStatement)

    CompoundStatement    go to state 54
    Statement            go to state 197
    SimpleStatement      go to state 57
    AssignmentStatement  go to state 58
    ProcedureStatement   go to state 59
    StructuredStatement  go to state 60
    Variable             go to state 61


state 192

   63 Type: T_ARRAY '[' Constant T_RANGE Constant ']' T_OF $@14 . Type $@15

    T_ARRAY   shift, and go to state 38
    T_RECORD  shift, and go to state 39
    T_ID      shift, and go to state 40

    Type  go to state 198


state 193

   39 OptIdentifiers: ';' IdentifierList . ':' Type $@12 OptIdentifiers

    ':'  shift, and go to state 199


state 194

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 ')' ':' ResultType ';' . DeclarationBody

    T_BEGIN    shift, and go to state 35
    T_FORWARD  shift, and go to state 186
    T_VAR      shift, and go to state 12

    VariableDeclarations  go to state 187
    DeclarationBody       go to state 200
    Block                 go to state 189
    CompoundStatement     go to state 190


state 195

   36 FormalParameterList: $@10 IdentifierList ':' Type $@11 OptIdentifiers .

    $default  reduce using rule 36 (FormalParameterList)


state 196

   41 Block: VariableDeclarations CompoundStatement .

    $default  reduce using rule 41 (Block)


state 197

   54 StructuredStatement: T_FOR T_ID T_ASSIGNMENT Expression T_TO Expression T_DO Statement .

    $default  reduce using rule 54 (StructuredStatement)


state 198

   63 Type: T_ARRAY '[' Constant T_RANGE Constant ']' T_OF $@14 Type . $@15

    $default  reduce using rule 62 ($@15)

    $@15  go to state 201


state 199

   39 OptIdentifiers: ';' IdentifierList ':' . Type $@12 OptIdentifiers

    T_ARRAY   shift, and go to state 38
    T_RECORD  shift, and go to state 39
    T_ID      shift, and go to state 40

    Type  go to state 202


state 200

   29 FunctionDeclaration: T_FUNCTION T_ID $@7 '(' FormalParameterList $@8 ')' ':' ResultType ';' DeclarationBody .

    $default  reduce using rule 29 (FunctionDeclaration)


state 201

   63 Type: T_ARRAY '[' Constant T_RANGE Constant ']' T_OF $@14 Type $@15 .

    $default  reduce using rule 63 (Type)


state 202

   39 OptIdentifiers: ';' IdentifierList ':' Type . $@12 OptIdentifiers

    $default  reduce using rule 38 ($@12)

    $@12  go to state 203


state 203

   39 OptIdentifiers: ';' IdentifierList ':' Type $@12 . OptIdentifiers

    ';'  shift, and go to state 181

    $default  reduce using rule 37 (OptIdentifiers)

    OptIdentifiers  go to state 204


state 204

   39 OptIdentifiers: ';' IdentifierList ':' Type $@12 OptIdentifiers .

    $default  reduce using rule 39 (OptIdentifiers)
